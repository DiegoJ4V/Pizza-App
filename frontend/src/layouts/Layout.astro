---
import ModalContainer from '@/components/common/ModalContainer.astro';
import { ShoppingCart } from '@/components/order/ShoppingCart'
import '@/styles/index.css'
import { ShowOrder } from '@/components/order/ShowOrders';

interface Props {
	title: string;
}

const pages = [
	{ name: 'Home', link: '/'},
	{ name: 'Menu', link: '/menu'},
	{ name: 'Customize', link: '/customize/empty'}
]

const socialLinks = [
	{ name: 'Personal', link: 'https://diegoj4v.github.io/My-website'},
	{ name: 'Github', link: 'https://github.com/DiegoJ4V'},
	{ name: 'LinkedIn', link: 'https://www.linkedin.com/in/diegoj4v/'}
]

const { title } = Astro.props
---

<!doctype html>
<html lang='en'>
	<head>
		<meta charset='UTF-8' />
		<meta name='description' content='Astro description' />
		<meta name='viewport' content='width=device-width' />
		<link rel='icon' type='image/svg+xml' href='/client/favicon.svg' />
		<meta name='generator' content={Astro.generator} />
		<title>{title}</title>
		{/*<ViewTransitions fallback='animate' /> */}
	</head>
	<body>
		<nav>
			<div class='menu--movil'>
				<button aria-label='Open menu'>
					<svg xmlns='http://www.w3.org/2000/svg' fill='none' stroke='currentColor' viewBox='0 0 24 24' class='humbleicons hi-view-list'>
						<path xmlns='http://www.w3.org/2000/svg' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 6h16M4 10h16M4 14h16M4 18h16'/>
					</svg>
				</button>
				<ModalContainer>
					<ul>
						{pages.map((page) => (
							<li>
								<a href={`/client${page.link}`} data-astro-prefetch>
									{page.name}
								</a>
							</li>
						))}
					</ul>
				</ModalContainer>
			</div>
			<div class='nav--interaction--buttons'>
				<a href='/client/customer/1'>
					Account
					<svg xmlns='http://www.w3.org/2000/svg' fill='none' stroke='currentColor' viewBox='0 0 24 24' class='humbleicons hi-user'>
						<path xmlns='http://www.w3.org/2000/svg' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M18 19v-1.25c0-2.071-1.919-3.75-4.286-3.75h-3.428C7.919 14 6 15.679 6 17.75V19m9-11a3 3 0 11-6 0 3 3 0 016 0z'/>
					</svg>
				</a>
				<ShoppingCart client:load transition:persist />
				<ModalContainer>
					<p slot='description'>Your order</p>
					<ShowOrder client:idle />
				</ModalContainer>
			</div>
		</nav>
		<slot />
		<!-- <footer>
			{socialLinks.map((socialLink) => (
				<a href={socialLink.link}>
					{socialLink.name}
				</a>
			))}			
		</footer> -->
	</body>
</html>

<style is:global>
	body {
		& nav {
			display: flex;
			height: 56px;
			position: sticky;
			top: 0;
			z-index: 2;
			justify-content: space-between;
			padding: 16px 24px;
			background-color: var(--background);
			border-bottom: 1px solid var(--divider);
		}
		& h1 {
			text-align: center;
			font-size: 3rem;
			font-weight: 400;
			line-height: 3.875rem;
			color: var(--primary-interaction);
		}
	}

	.menu--movil {
		& button {
			background-color: transparent;
			border: none;
		}
		& a {
			display: inline-flex;
			height: 64px;
			width: 100%;
			padding: 24px;
			align-items: center;
			color: var(--text-color);
			border-bottom: 1px solid var(--divider);
		}
	}
	
	.nav--interaction--buttons {
		display: flex;
		align-items: center;
		justify-content: center;
		gap: 16px;
		font-size: 1rem;
		font-weight: 500;
		color: var(--text-color);
		& a, button {
			display: flex;
			justify-content: center;
			gap: 4px;
		}
	}
</style>

<script>
	const openMovilMenuButton = document.querySelector('.menu--movil button')
	const movilMenuModal = document.querySelector('.menu--movil dialog')
	const closeMovilMenuButton = document.querySelector('.menu--movil dialog button')

	if (openMovilMenuButton instanceof HTMLButtonElement && movilMenuModal instanceof HTMLDialogElement) {
		openMovilMenuButton.addEventListener('click', () => movilMenuModal.showModal())
	}
	if (closeMovilMenuButton instanceof HTMLButtonElement && movilMenuModal instanceof HTMLDialogElement) {
		closeMovilMenuButton.addEventListener('click', () => movilMenuModal.close())
	}

	const openCartButton = document.querySelector('.nav--interaction--buttons button')
	const cartModal = document.querySelector('.nav--interaction--buttons dialog')
	const closeCartButton = document.querySelector('.nav--interaction--buttons dialog button')

	if (openCartButton instanceof HTMLButtonElement && cartModal instanceof HTMLDialogElement) {
		openCartButton.addEventListener('click', () => cartModal.showModal())
	}
	if (closeCartButton instanceof HTMLButtonElement && cartModal instanceof HTMLDialogElement) {
		closeCartButton.addEventListener('click', () => cartModal.close())
	}
</script>