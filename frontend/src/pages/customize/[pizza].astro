---
import { ImgContainer } from '@/components/common/ImgContainer'
import { PizzaData } from '@/components/customize/PizzaData'
import { PizzaIngredients } from '@/components/customize/PizzaIngredients'
import pizzaList from '@/data/pizza.json'
import Layout from '@/layouts/Layout.astro'
import { compareStringsOfNames } from '@/utils/compareStringsOfNames'
import type { GetStaticPaths, InferGetStaticParamsType } from 'astro'
import { Image } from 'astro:assets'


export const getStaticPaths = (() => {
	return pizzaList.map((element) => ({ params: { pizza: element.name.replace(' ', '-').toLowerCase() }}))
		.concat({ params: { pizza: 'empty' }})
}) satisfies GetStaticPaths

type Params = InferGetStaticParamsType<typeof getStaticPaths>

const { pizza } = Astro.params as Params

const getDefaultName = (name: String) => name.charAt(0).toUpperCase() + name.slice(1).replace('-', ' ')

const getIngredients = pizzaList
.filter(({ name }) => compareStringsOfNames(pizza, name))
.flatMap(({ ingredients }) => ingredients)

const getAuhor = pizza !== 'empty' ? 
	pizzaList.filter(({ name }) => compareStringsOfNames(name, pizza)).map(({ image }) => image.author)[0]
	: 'Foto de Fernando Andrade en Unsplash'
//const ingredients = await getAllIngredients()
---

<Layout title={`Customize your ${pizza.replace('-', ' ')} pizza`}>
	<main>
		<ImgContainer styleClass='pizza-image' figcaptionText={getAuhor}>
			<Image 
					class='pizza-custom' 
					src={`/client/images/pizza/${pizza}.jpg`}
					alt={`${getDefaultName(pizza)} pizza`}
					width='320'
					height='260'
					decoding='sync'
					loading='eager'
					transition:name={`image-${pizza.replace('-', ' ')}`}
				/>
		</ImgContainer>
		<PizzaData 
			client:load 
			pizza={{
				pizzaName: pizza,
				pizzaImageUrl: `/client/images/pizza/${pizza}.jpg`,
				pizzaImageAuthor: getAuhor
			}}
			prebuildIngredients={getIngredients} 
		/>
		<PizzaIngredients client:idle prebuildIngredients={getIngredients} />
	</main>
</Layout>
<style is:global>
	.pizza-image {
		height: 224px;
	}
</style>

<style>
	main {
		display: flex;
		flex-direction: column;
		gap: 16px;
		padding: 16px;
	}
</style>