---
import pizzaList from '@/data/pizza.json'
import Layout from '@/layouts/Layout.astro'
import { Image } from 'astro:assets'
import { PizzaData } from '@/components/customize/PizzaData'
import { PizzaIngredients } from '@/components/customize/PizzaIngredients'
import type { GetStaticPaths, InferGetStaticParamsType } from 'astro'


export const getStaticPaths = (() => {
	return [
		{ params: { pizza: 'empty' }},
		...pizzaList.map((element) => ({ params: { pizza: element.name.replace(' ', '-').toLowerCase() }}))
	]
}) satisfies GetStaticPaths

type Params = InferGetStaticParamsType<typeof getStaticPaths>

const { pizza } = Astro.params as Params

const getDefaultName = (name: String) => name.charAt(0).toUpperCase() + name.slice(1).replace('-', ' ')
const getIngredients = pizzaList
	.filter(({ name }) => pizza === name.toLocaleLowerCase().replace(' ', '-'))
	.flatMap(({ ingredients }) => ingredients)
//const ingredients = await getAllIngredients()
---

<Layout title={`Customize your ${pizza.replace('-', ' ')} pizza`}>
	<main>
		<figure>
			<div>
				<Image 
					class='pizza-custom' 
					src={`/client/images/pizza/${pizza}.jpg`}
					alt={`${getDefaultName(pizza)} pizza`}
					width='320'
					height='260'
					decoding='sync'
					loading='eager'
					transition:name={`image-${pizza.replace('-', ' ')}`}
				/>
			</div>
		</figure>
		<PizzaData client:load prebuildIngredients={getIngredients} />
		<PizzaIngredients client:idle prebuildIngredients={getIngredients} />
	</main>
</Layout>

<style>
	main {
		display: flex;
		flex-direction: column;
		gap: 16px;
		padding: 16px;

		& figure > div {
			height: 224px;
			border-radius: 16px;
			overflow: hidden;
			& img {
				width: 100%;
				height: 100%;
			}
		}
	}
</style>