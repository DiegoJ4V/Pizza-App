---
import Layout from '@/layouts/Layout.astro'

type Inputs = {
   name: string,
   type: astroHTML.JSX.HTMLInputTypeAttribute,
   required?: boolean
}

const locationInputs: Inputs[] = [
   { name: 'Country', type: 'text' },
   { name: 'City', type: 'text' },
   { name: 'Street', type: 'text' },
   { name: 'House number', type: 'number' },
   { name: 'Aparment', type: 'number', required: false },
   { name: 'Floor', type: 'number', required: false },
]

---

<Layout title='Checkout order'>
   <main>
      <h1>My order</h1>
      <section>
         <h2>Delivery address</h2>
         <form>
            {locationInputs.map((element) => (
               <label>
                  {element.name}
                  <input 
                     type={element.type}
                     required={element?.required ?? true}
                  >
               </label>
            ))}
            <button>Accept</button>
         </form>
      </section>
      <dialog>
         <p>Order made correctly</p>
      </dialog>
   </main>
</Layout>

<style>
   main {
      display: flex;
      flex-wrap: wrap;
      & h1 {
         display: block;
         width: 100%;
      }
   }
</style>

<script>
   import type { Order } from '@/types'
   import { saveOrder } from '@/services/orderService'
   import type { Pizza } from '@/types'

   const formulary = document.forms[0]

   formulary.addEventListener('submit', (event) => {
      event.preventDefault()

      if (event.currentTarget instanceof HTMLFormElement) {
         const { elements } = event.currentTarget
         const location: string[] = []
         
         for (const element of elements) {
            if (element instanceof HTMLInputElement && element.value) {
               location.push(element.value)
            }
         }

         const pizzaLocalStorage: Pizza[] = JSON.parse(localStorage.getItem('allPizza') ?? '[]')
         
         const order: Order = {
            idCustomer: 4234,
            country: location[0],
            city: location[1],
            street: location[2],
            houseNumber: Number(location[3]),
            apartment: location[4] ? Number(location[4]) : null,
            floor: location[5] ? Number(location[5]) : null,
            pizzaList: pizzaLocalStorage.map((pizza) => {
               const { id, ...rest } = pizza
               return rest
            })
         }
         
         saveOrder(order)
            .then((result) => {
               const modal = document.querySelector('dialog')
               if (result) {
                  modal?.showModal()
               }
            })
      }
   })
</script>